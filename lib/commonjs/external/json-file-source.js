import { Err, Ok } from "../lib/core/result";
import { catchToResult, parseJSON } from "../lib/util";
import * as fs from "fs";
class JsonFileSource {
    load(key, validator) {
        try {
            const raw = fs.readFileSync(key, "utf-8");
            return parseJSON(raw).andThen((j) => validator.asResult({
                none: () => Ok(j),
                some: (v) => v.parse(j),
            }));
        }
        catch (e) {
            return Err(catchToResult(e));
        }
    }
}
export { JsonFileSource };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianNvbi1maWxlLXNvdXJjZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9leHRlcm5hbC9qc29uLWZpbGUtc291cmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFVLE1BQU0sb0JBQW9CLENBQUM7QUFFckQsT0FBTyxFQUFFLGFBQWEsRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDdkQsT0FBTyxLQUFLLEVBQUUsTUFBTSxJQUFJLENBQUM7QUFFekIsTUFBTSxjQUFjO0lBQ2xCLElBQUksQ0FBSSxHQUFXLEVBQUUsU0FBK0I7UUFDbEQsSUFBSTtZQUNGLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBQzFDLE9BQU8sU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQ2xDLFNBQVMsQ0FBQyxRQUFRLENBQUM7Z0JBQ2pCLElBQUksRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFxQjtnQkFDckMsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQzthQUN4QixDQUFDLENBQ0gsQ0FBQztTQUNIO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDVixPQUFPLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUM5QjtJQUNILENBQUM7Q0FDRjtBQUVELE9BQU8sRUFBRSxjQUFjLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNvdXJjZSB9IGZyb20gXCIuLi9saWIvaW50ZXJmYWNlL2ZpbGUtbG9hZGVyXCI7XG5pbXBvcnQgeyBWYWxpZGF0b3IgfSBmcm9tIFwiLi4vbGliL2ludGVyZmFjZS92YWxpZGF0b3JcIjtcbmltcG9ydCB7IEVyciwgT2ssIFJlc3VsdCB9IGZyb20gXCIuLi9saWIvY29yZS9yZXN1bHRcIjtcbmltcG9ydCB7IE9wdGlvbiB9IGZyb20gXCIuLi9saWIvY29yZS9vcHRpb25cIjtcbmltcG9ydCB7IGNhdGNoVG9SZXN1bHQsIHBhcnNlSlNPTiB9IGZyb20gXCIuLi9saWIvdXRpbFwiO1xuaW1wb3J0ICogYXMgZnMgZnJvbSBcImZzXCI7XG5cbmNsYXNzIEpzb25GaWxlU291cmNlIGltcGxlbWVudHMgU291cmNlIHtcbiAgbG9hZDxUPihrZXk6IHN0cmluZywgdmFsaWRhdG9yOiBPcHRpb248VmFsaWRhdG9yPFQ+Pik6IFJlc3VsdDxULCBFcnJvcj4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByYXcgPSBmcy5yZWFkRmlsZVN5bmMoa2V5LCBcInV0Zi04XCIpO1xuICAgICAgcmV0dXJuIHBhcnNlSlNPTihyYXcpLmFuZFRoZW4oKGopID0+XG4gICAgICAgIHZhbGlkYXRvci5hc1Jlc3VsdCh7XG4gICAgICAgICAgbm9uZTogKCkgPT4gT2soaikgYXMgUmVzdWx0PFQsIEVycm9yPixcbiAgICAgICAgICBzb21lOiAodikgPT4gdi5wYXJzZShqKSxcbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIEVycihjYXRjaFRvUmVzdWx0KGUpKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IHsgSnNvbkZpbGVTb3VyY2UgfTtcbiJdfQ==